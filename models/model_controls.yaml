AutoArima:
  metadata:
    name: AutoArima
    descriptor: classic model, all species, focal species
    text: AutoArima (Automatic Auto-Regressive Integrated Moving Average) is a flexible
      Auto-Regressive Integrated Moving Average (ARIMA) model fit to the data at the
      composite (full site and just control plots) spatial level and both the composite
      (community) and the articulated (species) ecological levels. The model is selected
      and  fitted using the `auto.arima` and `forecast` functions in the **forecast**
      package [@Hyndman2013; @Hyndman2017] within the `AutoArima()` function. Generally,
      ARIMA models are defined according to three model structure parameters -- the
      number of autoregressive terms (p), the degree of differencing (d), and the
      order of the moving average (q), and are represented as ARIMA(p, d, q) [@Box1970].
      While the `auto.arima` function allows for seasonal models, the seasonality
      is hard-coded to be on the same period as the sampling, which is not the case
      for the Portal rodent surveys. As a result, no seasonal models were evaluated.
      AutoArima is fit flexibly, such that the model parameters can vary from fit
      to fit.
  fun: auto.arima
  args: ~
  interpolate: no
  datasets:
  - all
  - controls
  - exclosures
  - dm_controls
  response:
    link: normal
    type: distribution
  time: newmoon
ESSS:
  metadata:
    name: ESSS
    descriptor: classic model, all species, focal species, requires interpolation
    text: ESSS (Exponential Smoothing State Space) is a flexible exponential smoothing
      state space model [@Hyndman2008] fit to the interpolated data at the composite
      (full site and just control plots) spatial level and both the composite (community)
      and the articulated (species) ecological levels. The model is selected and fitted
      using the `ets` and `forecast` functions in the **forecast** package [@Hyndman2017]
      with the `allow.multiplicative.trend` argument set to `TRUE` within the `ESSS()`
      function. Models fit using `ets` implement what is known as the "innovations"
      approach to state space modeling, which assumes a single source of noise that
      is equivalent for the process and observation errors [@Hyndman2008]. In general,
      ESSS models are defined according to three model structure parameters -- error
      type, trend type, and seasonality type [@Hyndman2008]. Each of the parameters
      can be an N (none), A (additive), or M (multiplicative) state [@Hyndman2008].
      However, because of the difference in period between seasonality and sampling
      of the Portal rodents combined with the hard-coded single period of the `ets`
      function, we could not include the seasonal components to the ESSS model. ESSS
      is fit flexibly, such that the model parameters can vary from fit to fit.
  fun: ets
  args: ~
  interpolate: yes
  datasets:
  - all
  - controls
  - exclosures
  - dm_controls
  response:
    link: normal
    type: distribution
  time: newmoon
NaiveArima:
  metadata:
    name: NaiveArima
    descriptor: classic model, all species, focal species
    text: NaiveArima (Naive Auto-Regressive Integrated Moving Average) is a fixed
      Auto-Regressive Integrated Moving Average (ARIMA) model of order (0,1,0) fit
      to the data at the composite (full site and just control plots) spatial level
      and both the composite (community) and the articulated (species) ecological
      levels. The model is selected and fitted using the `Arima` and `forecast` functions
      in the **forecast** package [@Hyndman2013; @Hyndman2017] within the `NaiveArima()`
      function.
  fun: Arima
  args:
    order: c(0, 1, 0)
  interpolate: no
  datasets:
  - all
  - controls
  - exclosures
  - dm_controls
  response:
    link: normal
    type: distribution
  time: newmoon
nbGARCH:
  metadata:
    name: nbGARCH
    descriptor: classic model, all species, focal species, requires interpolation
    text: nbGARCH (Negative Binomial Auto-Regressive Conditional Heteroskedasticity)
      is a generalized autoregressive conditional heteroskedasticity (GARCH) model
      with overdispersion (*i.e.*, a negative binomial response) fit to the interpolated
      data at the composite (full site and just control plots) spatial level and both
      the composite (community) and the articulated (species) ecological levels. The
      model for each species and the community total is selected and fitted using
      the `tsglm` function in the **tscount** package [@Liboschik2017a] within the
      `nbGARCH()` function. GARCH models are generalized ARMA models and are defined
      according to their link function, response distribution, and two model structure
      parameters -- the number of autoregressive terms (p) and the order of the moving
      average (q), and are represented as GARCH(p, q) [@Liboschik2017a]. The nbGARCH
      model is fit using the log link and a negative binomial response (modeled as
      an over-dispersed Poisson), as well as with p = 1 (first-order autoregression)
      and q = 12 (approximately yearly moving average). The `tsglm` function in the
      **tscount** package [@Liboschik2017a] uses a (conditional) quasi-likelihood
      based approach to inference and models the overdispersion as an additional parameter
      in a two-step approach. This two-stage approach has only been minimally evaluated,
      although preliminary simulation-based studies are promising [@Liboschik2017b].
  fun: nbGARCH
  args: ~
  interpolate: yes
  datasets:
  - all
  - controls
  - exclosures
  - dm_controls
  response:
    link: negative_binomial
    type: distribution
  time: newmoon
nbsGARCH:
  metadata:
    name: nbsGARCH
    descriptor: classic model, all species, focal species, requires interpolation
    text: nbsGARCH (Negative Binomial Seasonal Auto-Regressive Conditional Heteroskedasticity)
      is a generalized autoregressive conditional heteroskedasticity (GARCH) model
      with overdispersion (*i.e.*, a negative binomial response) with seasonal predictors
      modeled using two Fourier series terms (sin and cos of the fraction of the year)
      fit to the interpolated data at the composite (full site and just control plots)
      spatial level and both the composite (community) and the articulated (species)
      ecological levels. The model for each species and the community total is selected
      and fitted using the `tsglm` function in the **tscount** package [@Liboschik2017a]
      within the `nbsGARCH()` function. GARCH models are generalized ARMA models and
      are defined according to their link function, response distribution, and two
      model structure parameters -- the number of autoregressive terms (p) and the
      order of the moving average (q), and are represented as GARCH(p, q) [@Liboschik2017a].
      The nbsGARCH model is fit using the log link and a negative binomial response
      (modeled as an over-dispersed Poisson), as well as with p = 1 (first-order autoregression)
      and q = 12 (approximately yearly moving average). The `tsglm` function in the
      **tscount** package [@Liboschik2017a] uses a (conditional) quasi-likelihood
      based approach to inference and models the overdispersion as an additional parameter
      in a two-step approach. This two-stage approach has only been minimally evaluated,
      although preliminary simulation-based studies are promising [@Liboschik2017b].
  fun: nbsGARCH
  args: ~
  interpolate: yes
  datasets:
  - all
  - controls
  - exclosures
  - dm_controls
  response:
    link: negative_binomial
    type: distribution
  time: newmoon
pevGARCH:
  metadata:
    name: pevGARCH
    descriptor: classic model, all species, focal species, requires interpolation
    text: pevGARCH (Poisson Environmental Variable Auto-Regressive Conditional Heteroskedasticity)
      is a generalized autoregressive conditional heteroskedasticity (GARCH) model
      fit to the interpolated data at the composite (full site and just control plots)
      spatial level and both the composite (community) and the articulated (species)
      ecological levels. The response variable is Poisson, and a variety of environmental
      variables are considered as covariates. The model for each species is selected
      and fitted using the `tsglm` function in the **tscount** package [@Liboschik2017a]
      within the `pevGARCH()` function. GARCH models are generalized ARMA models and
      are defined according to their link function, response distribution, and two
      model structure parameters -- the number of autoregressive terms (p) and the
      order of the moving average (q), and are represented as GARCH(p, q) [@Liboschik2017a].
      The pevGARCH model is fit using the log link and a Poisson response, as well
      as with p = 1 (first-order autoregression) and q = 12 (yearly moving average).
      The environmental variables potentially included in the model are min, mean,
      and max temperatures, precipitation, and NDVI.  The `tsglm` function in the
      **tscount** package [@Liboschik2017a] uses a (conditional) quasi-likelihood
      based approach to inference. This approach has only been minimally evaluated
      for models with covariates, although preliminary simulation-based studies are
      promising [@Liboschik2017b]. Each species is fit using the following (nonexhaustive)
      sets of the environmental covariates --  [1] max temp, mean temp, precipitation,
      NDVI; [2] max temp, min temp, precipitation, NDVI; [3] max temp, mean temp,
      min temp, precipitation; [4] precipitation, NDVI; [5] min temp, NDVI; [6] min
      temp; [7] max temp; [8] mean temp; [9] precipitation; [10] NDVI; and [11] -none-
      (intercept-only). The single best model of the 11 is selected based on AIC.
  fun: pevGARCH
  datasets:
  - all
  - controls
  - exclosures
  - dm_controls
  interpolate: yes
  args:
    lag: 6.0
  response:
    link: poisson
    type: distribution
  time: newmoon
jags_RW:
  metadata:
    name: jags_RW
    descriptor: population model, focal species
    text: jags_RW fits a hierarchical log-scale density random walk model with a Poisson
      observation process using the JAGS (Just Another Gibbs Sampler) infrastructure
      [@Plummer2003] fit to the  data at the composite (full site and just control
      plots) spatial level and both the composite (community) and the articulated
      (species) ecological levels. Similar to the NaiveArima model, jags_RW has an
      ARIMA order of (0,1,0), but in jags_RW, it is the underlying density that takes
      a random walk on the log scale, whereas in NaiveArima, it is the raw counts
      that take a random walk on the observation scale. The jags_RW model is rather
      simple, but the `jags_RW()` function provides a starting template and underlying
      machinery for more articulated models using the JAGS infrastructure. There are
      two process parameters -- mu (the density of the species at the beginning of
      the time series) and tau (the precision (inverse variance) of the random walk,
      which is Gaussian on the log scale). The observation model has no additional
      parameters. The prior distributions for mu and tau are informed by the available
      data collected prior to the start of the data used in the time series. mu is
      normally distributed with a mean equal to the average log-scale density and
      a variance that is twice as large as the observed variance. Due to the presence
      of 0s in the data and the modeling on the log scale, an offset of `count + 0.1`
      is used prior to taking the log and then is removed after the reconversion (exponentiation)
      as `density - 0.1` (where `density` is on the same scale as `count`, but can
      take non-integer values).
  fun: jags_RW
  datasets: dm_controls
  args:
    control_runjags:
      nchains: 2.0
      adapt: 10000.0
      burnin: 10000.0
      sample: 10000.0
      thin: 1.0
      modules: ''
      method: interruptible
      factories: ''
      mutate: .na
      cast_obs: yes
      silent_jags: no
  response:
    link: poisson
    type: empirical
  time: newmoon
jags_logistic:
  metadata:
    name: jags_logistic
    descriptor: population model, focal species
    text: jags_logistic fits a hierarchical log-scale density logistic growth model
      with a Poisson observation process using the JAGS (Just Another Gibbs Sampler)
      infrastructure [@Plummer2003] fit to the  data at the composite (full site and
      just control plots) spatial level and both the composite (community) and the
      articulated (species) ecological levels. Building upon the jags_RW model, jags_logistic
      expands upon the "process model" underlying the Poisson observations. There
      are four process parameters -- mu (the density of the species at the beginning
      of the time series) and tau (the precision (inverse variance) of the random
      walk, which is Gaussian on the log scale) for the starting value and r (growth
      rate) and K (carrying capacity) of the dynamic population. The observation model
      has no additional parameters. The prior distributions for mu, tau, and K are
      informed by the available data collected prior to the start of the data used
      in the time series and r is set with a vague prior. mu is normally distributed
      with a mean equal to the average log-scale density and a variance that is twice
      as large as the observed variance. K is modeled on the log-scale with a prior
      mean and variance equal to the maximum of `past counts * 1.2`. r is given a
      normal prior with mean 0 and variance 0.1. Due to the presence of 0s in the
      data and the modeling on the log scale, an offset of `count + 0.1` is used prior
      to taking the log and then is removed after the reconversion (exponentiation)
      as `density - 0.1` (where `density` is on the same scale as `count`, but can
      take non-integer values).
  fun: jags_logistic
  datasets: dm_controls
  args:
    control_runjags:
      nchains: 2.0
      adapt: 10000.0
      burnin: 10000.0
      sample: 10000.0
      thin: 1.0
      modules: ''
      method: interruptible
      factories: ''
      mutate: .na
      cast_obs: yes
      silent_jags: no
  response:
    link: poisson
    type: empirical
  time: newmoon
